{"version":3,"sources":["components/Header/Header.jsx","components/LinkList/LinkList.jsx","components/Fields/Films/Film/Film.jsx","components/Fields/Films/Films.jsx","components/Fields/People/Person/Person.jsx","components/Fields/People/People.jsx","components/Fields/Planets/Planet/Planet.jsx","components/Fields/Planets/Planets.jsx","components/Fields/Species/OneSpecies/OneSpecies.jsx","components/Fields/Species/Species.jsx","components/Fields/Starships/Starship/Starship.jsx","components/Fields/Starships/Starships.jsx","components/Fields/Vehicles/Vehicle/Vehicle.jsx","components/Fields/Vehicles/Vehicles.jsx","components/Main/Main.jsx","containers/MainComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","LinkList","_ref","changeField","currentField","className","concat","onClick","Film","state","characters","species","starships","vehicles","planets","this","setState","_this2","curJson","props","map","el","fetch","then","res","json","newChar","Object","toConsumableArray","_this$props","changePage","_this$state","title","director","episode_id","release_date","split","join","length","key","name","url","Component","Films","value","inputSearch","type","placeholder","onChange","count","results","Films_Film_Film","Person","homeworld","hair_color","mass","height","People","pageNumber","People_Person_Person","previous","next","Planet","residents","films","climate","terrain","population","Planets","Planets_Planet_Planet","OneSpecies","people","language","classification","Species","Species_OneSpecies_OneSpecies","Starship","pilots","model","passengers","Starships","Starships_Starship_Starship","Vehicle","Vehicles","Vehicles_Vehicle_Vehicle","Main","e","_this","target","innerText","toLowerCase","undefined","currentPage","indexOf","section","Fields_Films_Films","Fields_People_People","Fields_Planets_Planets","Fields_Species_Species","Fields_Starships_Starships","Fields_Vehicles_Vehicles","components_LinkList_LinkList","MainComponent","components_Header_Header","components_Main_Main","App","src_containers_MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sOAYeA,SARA,WACb,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,gCADF,IAC8BF,EAAAC,EAAAC,cAAA,mCCwCnBC,SA3CE,SAAAC,GAAmC,IAAhCC,EAAgCD,EAAhCC,YAAaC,EAAmBF,EAAnBE,aAC/B,OACEN,EAAAC,EAAAC,cAAA,MAAIK,UAAU,aACZP,EAAAC,EAAAC,cAAA,MACEK,UAAS,GAAAC,OAAsB,UAAjBF,GAA4B,WAC1CG,QAASJ,GAFX,SAMAL,EAAAC,EAAAC,cAAA,MACEK,UAAS,GAAAC,OAAsB,WAAjBF,GAA6B,WAC3CG,QAASJ,GAFX,UAMAL,EAAAC,EAAAC,cAAA,MACEK,UAAS,GAAAC,OAAsB,YAAjBF,GAA8B,WAC5CG,QAASJ,GAFX,WAMAL,EAAAC,EAAAC,cAAA,MACEK,UAAS,GAAAC,OAAsB,YAAjBF,GAA8B,WAC5CG,QAASJ,GAFX,WAMAL,EAAAC,EAAAC,cAAA,MACEK,UAAS,GAAAC,OAAsB,cAAjBF,GAAgC,WAC9CG,QAASJ,GAFX,aAMAL,EAAAC,EAAAC,cAAA,MACEK,UAAS,GAAAC,OAAsB,aAAjBF,GAA+B,WAC7CG,QAASJ,GAFX,sBCgISK,6MAlKbC,MAAQ,CACNC,WAAY,GACZC,QAAS,GACTC,UAAW,GACXC,SAAU,GACVC,QAAS,0FAGTC,KAAKC,SAAS,CACZN,WAAY,GACZC,QAAS,GACTC,UAAW,GACXC,SAAU,GACVC,QAAS,kDAGQ,IAAAG,EAAAF,KACXG,EAAYH,KAAKI,MAAjBD,QACRA,EAAQR,YACNQ,EAAQR,WAAWU,IAAI,SAAAC,GAAE,OACvBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMC,YAAlBJ,OAAA,CAA8BkB,IAC3CP,EAAKD,SAAS,CACZN,WAAYgB,QAItBR,EAAQP,SACNO,EAAQP,QAAQS,IAAI,SAAAC,GAAE,OACpBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAME,SAAlBL,OAAA,CAA2BkB,IACxCP,EAAKD,SAAS,CACZL,QAASe,QAInBR,EAAQN,WACNM,EAAQN,UAAUQ,IAAI,SAAAC,GAAE,OACtBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMG,WAAlBN,OAAA,CAA6BkB,IAC1CP,EAAKD,SAAS,CACZJ,UAAWc,QAIrBR,EAAQL,UACNK,EAAQL,SAASO,IAAI,SAAAC,GAAE,OACrBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMI,UAAlBP,OAAA,CAA4BkB,IACzCP,EAAKD,SAAS,CACZH,SAAUa,QAIpBR,EAAQJ,SACNI,EAAQJ,QAAQM,IAAI,SAAAC,GAAE,OACpBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMK,SAAlBR,OAAA,CAA2BkB,IACxCP,EAAKD,SAAS,CACZF,QAASY,yCAKZ,IAAAG,EACyBd,KAAKI,MAA7BD,EADDW,EACCX,QAASY,EADVD,EACUC,WADVC,EAEuDhB,KAAKN,MAA3DC,EAFDqB,EAECrB,WAAYC,EAFboB,EAEapB,QAASC,EAFtBmB,EAEsBnB,UAAWC,EAFjCkB,EAEiClB,SAAUC,EAF3CiB,EAE2CjB,QAClD,OACEhB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACbP,EAAAC,EAAAC,cAAA,yBACeF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQc,QAE9BlC,EAAAC,EAAAC,cAAA,uBACaF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQe,WAE5BnC,EAAAC,EAAAC,cAAA,qBACWF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQgB,aAE1BpC,EAAAC,EAAAC,cAAA,yBACgB,IACdF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQiB,aAAaC,MAAM,KAAKC,KAAK,QAIhDvC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,uBACCU,EAAW4B,OACV5B,EAAWU,IAAI,SAAAC,GAAE,OACfvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,gBAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,oBACCW,EAAQ2B,OACP3B,EAAQS,IAAI,SAAAC,GAAE,OACZvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,gBAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,sBACCY,EAAU0B,OACT1B,EAAUQ,IAAI,SAAAC,GAAE,OACdvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,gBAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,qBACCa,EAASyB,OACRzB,EAASO,IAAI,SAAAC,GAAE,OACbvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,gBAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,oBACCc,EAAQwB,OACPxB,EAAQM,IAAI,SAAAC,GAAE,OACZvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,yBA1JK0C,aCiCJC,mLA9BJ,IAAAd,EAC6Cd,KAAKI,MAAjDD,EADDW,EACCX,QAASY,EADVD,EACUC,WAAYc,EADtBf,EACsBe,MAAOC,EAD7BhB,EAC6BgB,YACpC,OACE/C,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,SACE8C,KAAK,OACLF,MAAOA,EACPG,YAAY,YACZC,SAAUH,IAEX3B,GACCA,EAAQ+B,OACR/B,EAAQgC,QAAQ9B,IAAI,SAAAC,GAAE,OACpBvB,EAAAC,EAAAC,cAAA,MACEuC,IAAKlB,EAAGW,MACRzB,QAAS,WACPuB,EAAWT,EAAGoB,OAGfpB,EAAGW,SAGTd,GAAWA,EAAQc,OAClBlC,EAAAC,EAAAC,cAACmD,EAAD,CAAMjC,QAASA,EAASY,WAAYA,YAxB1BY,aC0HLU,6MA3Hb3C,MAAQ,CACN4C,UAAW,GACX1C,QAAS,GACTC,UAAW,GACXC,SAAU,0FAGVE,KAAKC,SAAS,CACZqC,UAAW,GACX1C,QAAS,GACTC,UAAW,GACXC,SAAU,kDAGO,IAAAI,EAAAF,KACXG,EAAYH,KAAKI,MAAjBD,QACRI,MAAMJ,EAAQmC,WACX9B,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GAAG,OAAIP,EAAKD,SAAS,CAAEqC,UAAW7B,MAC1CN,EAAQP,SACNO,EAAQP,QAAQS,IAAI,SAAAC,GAAE,OACpBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAME,SAAlBL,OAAA,CAA2BkB,IACxCP,EAAKD,SAAS,CACZL,QAASe,QAInBR,EAAQN,WACNM,EAAQN,UAAUQ,IAAI,SAAAC,GAAE,OACtBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMG,WAAlBN,OAAA,CAA6BkB,IAC1CP,EAAKD,SAAS,CACZJ,UAAWc,QAIrBR,EAAQL,UACNK,EAAQL,SAASO,IAAI,SAAAC,GAAE,OACrBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMI,UAAlBP,OAAA,CAA4BkB,IACzCP,EAAKD,SAAS,CACZH,SAAUa,yCAKb,IAAAG,EACyBd,KAAKI,MAA7BD,EADDW,EACCX,QAASY,EADVD,EACUC,WADVC,EAE6ChB,KAAKN,MAAjD4C,EAFDtB,EAECsB,UAAW1C,EAFZoB,EAEYpB,QAASC,EAFrBmB,EAEqBnB,UAAWC,EAFhCkB,EAEgClB,SACvC,OACEf,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACbP,EAAAC,EAAAC,cAAA,mBACSF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQsB,OAExB1C,EAAAC,EAAAC,cAAA,yBACeF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQoC,aAE9BxD,EAAAC,EAAAC,cAAA,mBACSF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQqC,OAExBzD,EAAAC,EAAAC,cAAA,mBACSF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQsC,UAI1B1D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,MAAIO,QAAS,kBAAMuB,EAAWuB,EAAUZ,OACrCY,EAAUb,KAAOa,EAAUb,KAAO,MAIvC1C,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,oBACCW,EAAQ2B,OACP3B,EAAQS,IAAI,SAAAC,GAAE,OACZvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,gBAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,sBACCY,EAAU0B,OACT1B,EAAUQ,IAAI,SAAAC,GAAE,OACdvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,gBAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,qBACCa,EAASyB,OACRzB,EAASO,IAAI,SAAAC,GAAE,OACbvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,yBAnHO0C,aCiDNe,EA/CA,SAAAvD,GAA6D,IAA1DgB,EAA0DhB,EAA1DgB,QAASY,EAAiD5B,EAAjD4B,WAAYc,EAAqC1C,EAArC0C,MAAOC,EAA8B3C,EAA9B2C,YAAaa,EAAiBxD,EAAjBwD,WACzD,OACE5D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,SACE8C,KAAK,OACLF,MAAOA,EACPG,YAAY,YACZC,SAAUH,IAEX3B,GACCA,EAAQ+B,OACR/B,EAAQgC,QAAQ9B,IAAI,SAAAC,GAAE,OACpBvB,EAAAC,EAAAC,cAAA,MACEuC,IAAKlB,EAAGmB,KACRjC,QAAS,WACPuB,EAAWT,EAAGoB,OAGfpB,EAAGmB,QAGTtB,GAAWA,EAAQsB,MAClB1C,EAAAC,EAAAC,cAAC2D,EAAD,CAAQzC,QAASA,EAASY,WAAYA,IAEvCZ,GAAWA,EAAQ+B,OAClBnD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,UACEO,QAAS,WACPW,EAAQ0C,UAAY9B,EAAWZ,EAAQ0C,YAGzC9D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBAEfP,EAAAC,EAAAC,cAAA,YAAO0D,GACP5D,EAAAC,EAAAC,cAAA,UACEO,QAAS,WACPW,EAAQ2C,MAAQ/B,EAAWZ,EAAQ2C,QAGrC/D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,uBC0CVyD,6MAlFbrD,MAAQ,CACNsD,UAAW,GACXC,MAAO,0FAGPjD,KAAKC,SAAS,CACZ+C,UAAW,GACXC,MAAO,kDAGU,IAAA/C,EAAAF,KACXG,EAAYH,KAAKI,MAAjBD,QACRA,EAAQ6C,WACN7C,EAAQ6C,UAAU3C,IAAI,SAAAC,GAAE,OACtBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMsD,WAAlBzD,OAAA,CAA6BkB,IAC1CP,EAAKD,SAAS,CACZ+C,UAAWrC,QAIrBR,EAAQ8C,OACN9C,EAAQ8C,MAAM5C,IAAI,SAAAC,GAAE,OAClBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMuD,OAAlB1D,OAAA,CAAyBkB,IACtCP,EAAKD,SAAS,CACZgD,MAAOtC,yCAKV,IAAAG,EACyBd,KAAKI,MAA7BD,EADDW,EACCX,QAASY,EADVD,EACUC,WADVC,EAEsBhB,KAAKN,MAA1BsD,EAFDhC,EAECgC,UAAWC,EAFZjC,EAEYiC,MACnB,OACElE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACbP,EAAAC,EAAAC,cAAA,0BACgBF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQsB,OAE/B1C,EAAAC,EAAAC,cAAA,sBACYF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQ+C,UAE3BnE,EAAAC,EAAAC,cAAA,sBACYF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQgD,UAE3BpE,EAAAC,EAAAC,cAAA,yBACeF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQiD,cAIhCrE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,sBACC+D,EAAUzB,OACTyB,EAAU3C,IAAI,SAAAC,GAAE,OACdvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,gBAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,kBACCgE,EAAM5C,IAAI,SAAAC,GAAE,OACXvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGW,MAAOzB,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC7CpB,EAAGW,mBAzECU,aCkDN0B,EAhDC,SAAAlE,GAA6D,IAA1DgB,EAA0DhB,EAA1DgB,QAASY,EAAiD5B,EAAjD4B,WAAYc,EAAqC1C,EAArC0C,MAAOC,EAA8B3C,EAA9B2C,YAAaa,EAAiBxD,EAAjBwD,WAC1D,OACE5D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,SACE8C,KAAK,OACLF,MAAOA,EACPG,YAAY,YACZC,SAAUH,IAEX3B,GACCA,EAAQ+B,OACR/B,EAAQgC,QAAQ9B,IAAI,SAAAC,GAAE,OACpBvB,EAAAC,EAAAC,cAAA,MACEuC,IAAKlB,EAAGmB,KACRjC,QAAS,WACPuB,EAAWT,EAAGoB,OAGfpB,EAAGmB,QAGTtB,GAAWA,EAAQsB,MAClB1C,EAAAC,EAAAC,cAACqE,EAAD,CAAQnD,QAASA,EAASY,WAAYA,IAEvCZ,GAAWA,EAAQ+B,OAClBnD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,UACEO,QAAS,WACPW,EAAQ0C,UAAY9B,EAAWZ,EAAQ0C,YAGzC9D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBAEfP,EAAAC,EAAAC,cAAA,YAAO0D,GAEP5D,EAAAC,EAAAC,cAAA,UACEO,QAAS,WACPW,EAAQ2C,MAAQ/B,EAAWZ,EAAQ2C,QAGrC/D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,uBCqCViE,6MA9Eb7D,MAAQ,CACN8D,OAAQ,GACRP,MAAO,0FAGPjD,KAAKC,SAAS,CACZuD,OAAQ,GACRP,MAAO,kDAGU,IAAA/C,EAAAF,KACXG,EAAYH,KAAKI,MAAjBD,QACRA,EAAQqD,QACNrD,EAAQqD,OAAOnD,IAAI,SAAAC,GAAE,OACnBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAM8D,QAAlBjE,OAAA,CAA0BkB,IACvCP,EAAKD,SAAS,CACZuD,OAAQ7C,QAIlBR,EAAQ8C,OACN9C,EAAQ8C,MAAM5C,IAAI,SAAAC,GAAE,OAClBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMuD,OAAlB1D,OAAA,CAAyBkB,IACtCP,EAAKD,SAAS,CACZgD,MAAOtC,yCAKV,IAAAG,EACyBd,KAAKI,MAA7BD,EADDW,EACCX,QAASY,EADVD,EACUC,WADVC,EAEmBhB,KAAKN,MAAvB8D,EAFDxC,EAECwC,OAAQP,EAFTjC,EAESiC,MAChB,OACElE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACbP,EAAAC,EAAAC,cAAA,2BACiBF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQsB,OAEhC1C,EAAAC,EAAAC,cAAA,uBACaF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQsD,WAE5B1E,EAAAC,EAAAC,cAAA,6BACmBF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQuD,kBAGpC3E,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,mBACCuE,EAAOjC,OACNiC,EAAOnD,IAAI,SAAAC,GAAE,OACXvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,gBAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,kBACCgE,EAAM5C,IAAI,SAAAC,GAAE,OACXvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGW,MAAOzB,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC7CpB,EAAGW,mBArEKU,aCkDVgC,EAhDC,SAAAxE,GAA6D,IAA1DgB,EAA0DhB,EAA1DgB,QAASY,EAAiD5B,EAAjD4B,WAAYc,EAAqC1C,EAArC0C,MAAOC,EAA8B3C,EAA9B2C,YAAaa,EAAiBxD,EAAjBwD,WAC1D,OACE5D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,SACE8C,KAAK,OACLF,MAAOA,EACPG,YAAY,YACZC,SAAUH,IAEX3B,GACCA,EAAQ+B,OACR/B,EAAQgC,QAAQ9B,IAAI,SAAAC,GAAE,OACpBvB,EAAAC,EAAAC,cAAA,MACEuC,IAAKlB,EAAGmB,KACRjC,QAAS,WACPuB,EAAWT,EAAGoB,OAGfpB,EAAGmB,QAGTtB,GAAWA,EAAQsB,MAClB1C,EAAAC,EAAAC,cAAC2E,EAAD,CAAYzD,QAASA,EAASY,WAAYA,IAE3CZ,GAAWA,EAAQ+B,OAClBnD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,UACEO,QAAS,WACPW,EAAQ0C,UAAY9B,EAAWZ,EAAQ0C,YAGzC9D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBAEfP,EAAAC,EAAAC,cAAA,YAAO0D,GAEP5D,EAAAC,EAAAC,cAAA,UACEO,QAAS,WACPW,EAAQ2C,MAAQ/B,EAAWZ,EAAQ2C,QAGrC/D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,uBCsCVuE,6MA/EbnE,MAAQ,CACNoE,OAAQ,GACRb,MAAO,0FAGPjD,KAAKC,SAAS,CACZ6D,OAAQ,GACRb,MAAO,kDAGU,IAAA/C,EAAAF,KACXG,EAAYH,KAAKI,MAAjBD,QACRA,EAAQ2D,QACN3D,EAAQ2D,OAAOzD,IAAI,SAAAC,GAAE,OACnBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMoE,QAAlBvE,OAAA,CAA0BkB,IACvCP,EAAKD,SAAS,CACZ6D,OAAQnD,QAIlBR,EAAQ8C,OACN9C,EAAQ8C,MAAM5C,IAAI,SAAAC,GAAE,OAClBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMuD,OAAlB1D,OAAA,CAAyBkB,IACtCP,EAAKD,SAAS,CACZgD,MAAOtC,yCAKV,IAAAG,EACyBd,KAAKI,MAA7BD,EADDW,EACCX,QAASY,EADVD,EACUC,WADVC,EAEmBhB,KAAKN,MAAvBoE,EAFD9C,EAEC8C,OAAQb,EAFTjC,EAESiC,MAChB,OACElE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACbP,EAAAC,EAAAC,cAAA,4BACkBF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQsB,OAEjC1C,EAAAC,EAAAC,cAAA,oBACUF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQ4D,QAEzBhF,EAAAC,EAAAC,cAAA,yBACeF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQ6D,cAIhCjF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,mBACC6E,EAAOvC,OACNuC,EAAOzD,IAAI,SAAAC,GAAE,OACXvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,gBAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,kBACCgE,EAAM5C,IAAI,SAAAC,GAAE,OACXvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGW,MAAOzB,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC7CpB,EAAGW,mBAtEGU,aCkDRsC,EAhDG,SAAA9E,GAA6D,IAA1DgB,EAA0DhB,EAA1DgB,QAASY,EAAiD5B,EAAjD4B,WAAYc,EAAqC1C,EAArC0C,MAAOC,EAA8B3C,EAA9B2C,YAAaa,EAAiBxD,EAAjBwD,WAC5D,OACE5D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,SACE8C,KAAK,OACLF,MAAOA,EACPG,YAAY,YACZC,SAAUH,IAEX3B,GACCA,EAAQ+B,OACR/B,EAAQgC,QAAQ9B,IAAI,SAAAC,GAAE,OACpBvB,EAAAC,EAAAC,cAAA,MACEuC,IAAKlB,EAAGmB,KACRjC,QAAS,WACPuB,EAAWT,EAAGoB,OAGfpB,EAAGmB,QAGTtB,GAAWA,EAAQsB,MAClB1C,EAAAC,EAAAC,cAACiF,EAAD,CAAU/D,QAASA,EAASY,WAAYA,IAEzCZ,GAAWA,EAAQ+B,OAClBnD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,UACEO,QAAS,WACPW,EAAQ0C,UAAY9B,EAAWZ,EAAQ0C,YAGzC9D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBAEfP,EAAAC,EAAAC,cAAA,YAAO0D,GAEP5D,EAAAC,EAAAC,cAAA,UACEO,QAAS,WACPW,EAAQ2C,MAAQ/B,EAAWZ,EAAQ2C,QAGrC/D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,uBCsCV6E,6MA/EbzE,MAAQ,CACNoE,OAAQ,GACRb,MAAO,0FAGPjD,KAAKC,SAAS,CACZ6D,OAAQ,GACRb,MAAO,kDAGU,IAAA/C,EAAAF,KACXG,EAAYH,KAAKI,MAAjBD,QACRA,EAAQ2D,QACN3D,EAAQ2D,OAAOzD,IAAI,SAAAC,GAAE,OACnBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMoE,QAAlBvE,OAAA,CAA0BkB,IACvCP,EAAKD,SAAS,CACZ6D,OAAQnD,QAIlBR,EAAQ8C,OACN9C,EAAQ8C,MAAM5C,IAAI,SAAAC,GAAE,OAClBC,MAAMD,GACHE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACJ,IAAME,EAAOC,OAAAC,EAAA,EAAAD,CAAOV,EAAKR,MAAMuD,OAAlB1D,OAAA,CAAyBkB,IACtCP,EAAKD,SAAS,CACZgD,MAAOtC,yCAKV,IAAAG,EACyBd,KAAKI,MAA7BD,EADDW,EACCX,QAASY,EADVD,EACUC,WADVC,EAEmBhB,KAAKN,MAAvBoE,EAFD9C,EAEC8C,OAAQb,EAFTjC,EAESiC,MAChB,OACElE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACbP,EAAAC,EAAAC,cAAA,2BACiBF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQsB,OAEhC1C,EAAAC,EAAAC,cAAA,oBACUF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQ4D,QAEzBhF,EAAAC,EAAAC,cAAA,yBACeF,EAAAC,EAAAC,cAAA,YAAOkB,EAAQ6D,cAIhCjF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,mBACC6E,EAAOvC,OACNuC,EAAOzD,IAAI,SAAAC,GAAE,OACXvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGmB,KAAMjC,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC5CpB,EAAGmB,QAIR1C,EAAAC,EAAAC,cAAA,gBAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,kBACCgE,EAAM5C,IAAI,SAAAC,GAAE,OACXvB,EAAAC,EAAAC,cAAA,MAAIuC,IAAKlB,EAAGW,MAAOzB,QAAS,kBAAMuB,EAAWT,EAAGoB,OAC7CpB,EAAGW,mBAtEEU,aCsDPyC,EApDE,SAAAjF,GAA6D,IAA1DgB,EAA0DhB,EAA1DgB,QAASY,EAAiD5B,EAAjD4B,WAAYc,EAAqC1C,EAArC0C,MAAOC,EAA8B3C,EAA9B2C,YAAaa,EAAiBxD,EAAjBwD,WAC3D,OACE5D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,SACE8C,KAAK,OACLF,MAAOA,EACPG,YAAY,YACZC,SAAUH,IAEX3B,GAAWA,EAAQ+B,MAChB/B,EAAQgC,QAAQ9B,IAAI,SAAAC,GAAE,OACpBvB,EAAAC,EAAAC,cAAA,MACEuC,IAAKlB,EAAGmB,KACRjC,QAAS,WACPuB,EAAWT,EAAGoB,OAGfpB,EAAGmB,QAGR,GACHtB,GAAWA,EAAQsB,KAClB1C,EAAAC,EAAAC,cAACoF,EAAD,CAASlE,QAASA,EAASY,WAAYA,IAEvC,GAEDZ,GAAWA,EAAQ+B,MAClBnD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,UACEO,QAAS,WACPW,EAAQ0C,UAAY9B,EAAWZ,EAAQ0C,YAGzC9D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBAEfP,EAAAC,EAAAC,cAAA,YAAO0D,GAEP5D,EAAAC,EAAAC,cAAA,UACEO,QAAS,WACPW,EAAQ2C,MAAQ/B,EAAWZ,EAAQ2C,QAGrC/D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBAIjB,KC6EOgF,6MApHb5E,MAAQ,CACNL,aAAc,GACdsD,WAAY,KAEdvD,YAAc,SAAAmF,GACZC,EAAKvE,SAAS,CACZZ,aAAckF,EAAEE,OAAOC,UAAUC,cACjCxE,aAASyE,EACT/C,MAAO,GACPc,WAAY,IAEdpC,MAAK,wBAAAhB,OAAyBgF,EAAEE,OAAOC,UAAUC,gBAC9CnE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GAAG,OAAI+D,EAAKvE,SAAS,CAAEE,QAASM,SAE1CqB,YAAc,SAAAyC,GAAK,IACTlF,EAAiBmF,EAAK9E,MAAtBL,aACRmF,EAAKvE,SAAS,CACZ4B,MAAO0C,EAAEE,OAAO5C,MAChBxC,aAAY,wBAAAE,OAA0BF,EAA1B,aAAAE,OACVgF,EAAEE,OAAO5C,OAEXc,WAAY,IAEd6B,EAAKzD,WAAL,wBAAAxB,OAC0BF,EAD1B,aAAAE,OACkDgF,EAAEE,OAAO5C,WAG7Dd,WAAa,SAAAW,GACX8C,EAAKvE,SAAS,CACZ4E,YAAanD,EACbrC,aAAcqC,EAAIL,MAAM,KAAK,GAC7BsB,YAAuC,IAA3BjB,EAAIoD,QAAQ,UAAmBpD,EAAIL,MAAM,KAAK,GAAK,IAEjEd,MAAMmB,GACHlB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GAAG,OAAI+D,EAAKvE,SAAS,CAAEE,QAASM,SAE1CsE,QAAU,WAAM,IAAA/D,EACyBwD,EAAK9E,MAApCS,EADMa,EACNb,QAAS0B,EADHb,EACGa,MAAOc,EADV3B,EACU2B,WACxB,OAAQ6B,EAAK9E,MAAML,cACjB,IAAK,QACH,OACEN,EAAAC,EAAAC,cAAC+F,EAAD,CACErC,WAAYA,EACZxC,QAASA,EACTY,WAAYyD,EAAKzD,WACjBc,MAAOA,EACPC,YAAa0C,EAAK1C,cAGxB,IAAK,SACH,OACE/C,EAAAC,EAAAC,cAACgG,EAAD,CACEtC,WAAYA,EACZxC,QAASA,EACTY,WAAYyD,EAAKzD,WACjBc,MAAOA,EACPC,YAAa0C,EAAK1C,cAGxB,IAAK,UACH,OACE/C,EAAAC,EAAAC,cAACiG,EAAD,CACEvC,WAAYA,EACZxC,QAASA,EACTY,WAAYyD,EAAKzD,WACjBc,MAAOA,EACPC,YAAa0C,EAAK1C,cAGxB,IAAK,UACH,OACE/C,EAAAC,EAAAC,cAACkG,EAAD,CACExC,WAAYA,EACZxC,QAASA,EACTY,WAAYyD,EAAKzD,WACjBc,MAAOA,EACPC,YAAa0C,EAAK1C,cAGxB,IAAK,YACH,OACE/C,EAAAC,EAAAC,cAACmG,EAAD,CACEzC,WAAYA,EACZxC,QAASA,EACTY,WAAYyD,EAAKzD,WACjBc,MAAOA,EACPC,YAAa0C,EAAK1C,cAGxB,IAAK,WACH,OACE/C,EAAAC,EAAAC,cAACoG,EAAD,CACE1C,WAAYA,EACZxC,QAASA,EACTY,WAAYyD,EAAKzD,WACjBc,MAAOA,EACPC,YAAa0C,EAAK1C,cAGxB,QACE,MAAO,6EAGJ,IACCzC,EAAiBW,KAAKN,MAAtBL,aACR,OACEN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqG,EAAD,CAAUjG,aAAcA,EAAcD,YAAaY,KAAKZ,cACvDY,KAAK+E,kBA/GKpD,aCKJ4D,SATO,WACpB,OACExG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAACwG,EAAD,SCDSC,mLAJX,OAAO3G,EAAAC,EAAAC,cAAC0G,EAAD,aAFOhE,aCSEiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnH,EAAAC,EAAAC,cAACkH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhG,KAAK,SAAAiG,GACjCA,EAAaC","file":"static/js/main.de1316b1.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Header.scss'\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>STAR WARS API test</h1> <p>by Ivan Hrynevytsky</p>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nimport './LinkList.scss'\n\nconst LinkList = ({ changeField, currentField }) => {\n  return (\n    <ul className=\"list-flex\">\n      <li\n        className={`${currentField === 'films' && 'current'}`}\n        onClick={changeField}\n      >\n        Films\n      </li>\n      <li\n        className={`${currentField === 'people' && 'current'}`}\n        onClick={changeField}\n      >\n        People\n      </li>\n      <li\n        className={`${currentField === 'planets' && 'current'}`}\n        onClick={changeField}\n      >\n        Planets\n      </li>\n      <li\n        className={`${currentField === 'species' && 'current'}`}\n        onClick={changeField}\n      >\n        Species\n      </li>\n      <li\n        className={`${currentField === 'starships' && 'current'}`}\n        onClick={changeField}\n      >\n        Starships\n      </li>\n      <li\n        className={`${currentField === 'vehicles' && 'current'}`}\n        onClick={changeField}\n      >\n        Vehicles\n      </li>\n    </ul>\n  )\n}\n\nexport default LinkList\n","import React, { Component } from 'react'\n\nclass Film extends Component {\n  state = {\n    characters: [],\n    species: [],\n    starships: [],\n    vehicles: [],\n    planets: [],\n  }\n  componentWillUnmount() {\n    this.setState({\n      characters: [],\n      species: [],\n      starships: [],\n      vehicles: [],\n      planets: [],\n    })\n  }\n  componentWillMount() {\n    const { curJson } = this.props\n    curJson.characters &&\n      curJson.characters.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.characters, res]\n            this.setState({\n              characters: newChar,\n            })\n          })\n      )\n    curJson.species &&\n      curJson.species.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.species, res]\n            this.setState({\n              species: newChar,\n            })\n          })\n      )\n    curJson.starships &&\n      curJson.starships.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.starships, res]\n            this.setState({\n              starships: newChar,\n            })\n          })\n      )\n    curJson.vehicles &&\n      curJson.vehicles.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.vehicles, res]\n            this.setState({\n              vehicles: newChar,\n            })\n          })\n      )\n    curJson.planets &&\n      curJson.planets.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.planets, res]\n            this.setState({\n              planets: newChar,\n            })\n          })\n      )\n  }\n  render() {\n    const { curJson, changePage } = this.props\n    const { characters, species, starships, vehicles, planets } = this.state\n    return (\n      <div className=\"field-element\">\n        <div className=\"about\">\n          <p>\n            Film Title : <span>{curJson.title}</span>\n          </p>\n          <p>\n            Director : <span>{curJson.director}</span>\n          </p>\n          <p>\n            Episode #<span>{curJson.episode_id}</span>\n          </p>\n          <p>\n            Release Date:{' '}\n            <span>{curJson.release_date.split('-').join('.')}</span>\n          </p>\n        </div>\n\n        <div className=\"flex-container\">\n          <div className=\"flex\">\n            <p>CHARACTERS</p>\n            {characters.length ? (\n              characters.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n          <div className=\"flex\">\n            <p>SPECIES</p>\n            {species.length ? (\n              species.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n          <div className=\"flex\">\n            <p>STARSHIPS</p>\n            {starships.length ? (\n              starships.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n          <div className=\"flex\">\n            <p>VEHICLES</p>\n            {vehicles.length ? (\n              vehicles.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n          <div className=\"flex\">\n            <p>PLANETS</p>\n            {planets.length ? (\n              planets.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Film\n","import React, { Component } from 'react'\n\nimport Film from './Film/Film'\n\nclass Films extends Component {\n  render() {\n    const { curJson, changePage, value, inputSearch } = this.props\n    return (\n      <div className=\"field-container\">\n        <input\n          type=\"text\"\n          value={value}\n          placeholder=\"Search...\"\n          onChange={inputSearch}\n        />\n        {curJson &&\n          curJson.count &&\n          curJson.results.map(el => (\n            <li\n              key={el.title}\n              onClick={() => {\n                changePage(el.url)\n              }}\n            >\n              {el.title}\n            </li>\n          ))}\n        {curJson && curJson.title && (\n          <Film curJson={curJson} changePage={changePage} />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Films\n","import React, { Component } from 'react'\n\nclass Person extends Component {\n  state = {\n    homeworld: [],\n    species: [],\n    starships: [],\n    vehicles: [],\n  }\n  componentWillUnmount() {\n    this.setState({\n      homeworld: [],\n      species: [],\n      starships: [],\n      vehicles: [],\n    })\n  }\n  componentWillMount() {\n    const { curJson } = this.props\n    fetch(curJson.homeworld)\n      .then(res => res.json())\n      .then(res => this.setState({ homeworld: res }))\n    curJson.species &&\n      curJson.species.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.species, res]\n            this.setState({\n              species: newChar,\n            })\n          })\n      )\n    curJson.starships &&\n      curJson.starships.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.starships, res]\n            this.setState({\n              starships: newChar,\n            })\n          })\n      )\n    curJson.vehicles &&\n      curJson.vehicles.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.vehicles, res]\n            this.setState({\n              vehicles: newChar,\n            })\n          })\n      )\n  }\n  render() {\n    const { curJson, changePage } = this.props\n    const { homeworld, species, starships, vehicles } = this.state\n    return (\n      <div className=\"field-element\">\n        <div className=\"about\">\n          <p>\n            Name : <span>{curJson.name}</span>\n          </p>\n          <p>\n            Hair Color : <span>{curJson.hair_color}</span>\n          </p>\n          <p>\n            Mass : <span>{curJson.mass}</span>\n          </p>\n          <p>\n            Height <span>{curJson.height}</span>\n          </p>\n        </div>\n\n        <div className=\"flex-container\">\n          <div className=\"flex\">\n            <p>HOMEWORLD</p>\n            <li onClick={() => changePage(homeworld.url)}>\n              {homeworld.name ? homeworld.name : '-'}\n            </li>\n          </div>\n\n          <div className=\"flex\">\n            <p>SPECIES</p>\n            {species.length ? (\n              species.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n          <div className=\"flex\">\n            <p>STARSHIPS</p>\n            {starships.length ? (\n              starships.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n          <div className=\"flex\">\n            <p>VEHICLES</p>\n            {vehicles.length ? (\n              vehicles.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Person\n","import React from 'react'\n\nimport Person from './Person/Person'\n\nconst People = ({ curJson, changePage, value, inputSearch, pageNumber }) => {\n  return (\n    <div className=\"field-container\">\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Search...\"\n        onChange={inputSearch}\n      />\n      {curJson &&\n        curJson.count &&\n        curJson.results.map(el => (\n          <li\n            key={el.name}\n            onClick={() => {\n              changePage(el.url)\n            }}\n          >\n            {el.name}\n          </li>\n        ))}\n      {curJson && curJson.name && (\n        <Person curJson={curJson} changePage={changePage} />\n      )}\n      {curJson && curJson.count && (\n        <div className=\"buttons\">\n          <button\n            onClick={() => {\n              curJson.previous && changePage(curJson.previous)\n            }}\n          >\n            <i className=\"fas fa-backward\" />\n          </button>\n          <span>{pageNumber}</span>\n          <button\n            onClick={() => {\n              curJson.next && changePage(curJson.next)\n            }}\n          >\n            <i className=\"fas fa-forward\" />\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default People\n","import React, { Component } from 'react'\n\nclass Planet extends Component {\n  state = {\n    residents: [],\n    films: [],\n  }\n  componentWillUnmount() {\n    this.setState({\n      residents: [],\n      films: [],\n    })\n  }\n  componentWillMount() {\n    const { curJson } = this.props\n    curJson.residents &&\n      curJson.residents.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.residents, res]\n            this.setState({\n              residents: newChar,\n            })\n          })\n      )\n    curJson.films &&\n      curJson.films.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.films, res]\n            this.setState({\n              films: newChar,\n            })\n          })\n      )\n  }\n  render() {\n    const { curJson, changePage } = this.props\n    const { residents, films } = this.state\n    return (\n      <div className=\"field-element\">\n        <div className=\"about\">\n          <p>\n            Planet Name : <span>{curJson.name}</span>\n          </p>\n          <p>\n            Climate : <span>{curJson.climate}</span>\n          </p>\n          <p>\n            Terrain : <span>{curJson.terrain}</span>\n          </p>\n          <p>\n            Population : <span>{curJson.population}</span>\n          </p>\n        </div>\n\n        <div className=\"flex-container\">\n          <div className=\"flex\">\n            <p>RESIDENTS</p>\n            {residents.length ? (\n              residents.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n          <div className=\"flex\">\n            <p>FILMS</p>\n            {films.map(el => (\n              <li key={el.title} onClick={() => changePage(el.url)}>\n                {el.title}\n              </li>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Planet\n","import React from 'react'\n\nimport Planet from './Planet/Planet'\n\nconst Planets = ({ curJson, changePage, value, inputSearch, pageNumber }) => {\n  return (\n    <div className=\"field-container\">\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Search...\"\n        onChange={inputSearch}\n      />\n      {curJson &&\n        curJson.count &&\n        curJson.results.map(el => (\n          <li\n            key={el.name}\n            onClick={() => {\n              changePage(el.url)\n            }}\n          >\n            {el.name}\n          </li>\n        ))}\n      {curJson && curJson.name && (\n        <Planet curJson={curJson} changePage={changePage} />\n      )}\n      {curJson && curJson.count && (\n        <div className=\"buttons\">\n          <button\n            onClick={() => {\n              curJson.previous && changePage(curJson.previous)\n            }}\n          >\n            <i className=\"fas fa-backward\" />\n          </button>\n          <span>{pageNumber}</span>\n\n          <button\n            onClick={() => {\n              curJson.next && changePage(curJson.next)\n            }}\n          >\n            <i className=\"fas fa-forward\" />\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Planets\n","import React, { Component } from 'react'\n\nclass OneSpecies extends Component {\n  state = {\n    people: [],\n    films: [],\n  }\n  componentWillUnmount() {\n    this.setState({\n      people: [],\n      films: [],\n    })\n  }\n  componentWillMount() {\n    const { curJson } = this.props\n    curJson.people &&\n      curJson.people.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.people, res]\n            this.setState({\n              people: newChar,\n            })\n          })\n      )\n    curJson.films &&\n      curJson.films.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.films, res]\n            this.setState({\n              films: newChar,\n            })\n          })\n      )\n  }\n  render() {\n    const { curJson, changePage } = this.props\n    const { people, films } = this.state\n    return (\n      <div className=\"field-element\">\n        <div className=\"about\">\n          <p>\n            Species Name : <span>{curJson.name}</span>\n          </p>\n          <p>\n            Language : <span>{curJson.language}</span>\n          </p>\n          <p>\n            Classification : <span>{curJson.classification}</span>\n          </p>\n        </div>\n        <div className=\"flex-container\">\n          <div className=\"flex\">\n            <p>PEOPLE</p>\n            {people.length ? (\n              people.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n          <div className=\"flex\">\n            <p>FILMS</p>\n            {films.map(el => (\n              <li key={el.title} onClick={() => changePage(el.url)}>\n                {el.title}\n              </li>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OneSpecies\n","import React from 'react'\n\nimport OneSpecies from './OneSpecies/OneSpecies'\n\nconst Species = ({ curJson, changePage, value, inputSearch, pageNumber }) => {\n  return (\n    <div className=\"field-container\">\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Search...\"\n        onChange={inputSearch}\n      />\n      {curJson &&\n        curJson.count &&\n        curJson.results.map(el => (\n          <li\n            key={el.name}\n            onClick={() => {\n              changePage(el.url)\n            }}\n          >\n            {el.name}\n          </li>\n        ))}\n      {curJson && curJson.name && (\n        <OneSpecies curJson={curJson} changePage={changePage} />\n      )}\n      {curJson && curJson.count && (\n        <div className=\"buttons\">\n          <button\n            onClick={() => {\n              curJson.previous && changePage(curJson.previous)\n            }}\n          >\n            <i className=\"fas fa-backward\" />\n          </button>\n          <span>{pageNumber}</span>\n\n          <button\n            onClick={() => {\n              curJson.next && changePage(curJson.next)\n            }}\n          >\n            <i className=\"fas fa-forward\" />\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Species\n","import React, { Component } from 'react'\n\nclass Starship extends Component {\n  state = {\n    pilots: [],\n    films: [],\n  }\n  componentWillUnmount() {\n    this.setState({\n      pilots: [],\n      films: [],\n    })\n  }\n  componentWillMount() {\n    const { curJson } = this.props\n    curJson.pilots &&\n      curJson.pilots.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.pilots, res]\n            this.setState({\n              pilots: newChar,\n            })\n          })\n      )\n    curJson.films &&\n      curJson.films.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.films, res]\n            this.setState({\n              films: newChar,\n            })\n          })\n      )\n  }\n  render() {\n    const { curJson, changePage } = this.props\n    const { pilots, films } = this.state\n    return (\n      <div className=\"field-element\">\n        <div className=\"about\">\n          <p>\n            Starship Name : <span>{curJson.name}</span>\n          </p>\n          <p>\n            Model : <span>{curJson.model}</span>\n          </p>\n          <p>\n            Passengers : <span>{curJson.passengers}</span>\n          </p>\n        </div>\n\n        <div className=\"flex-container\">\n          <div className=\"flex\">\n            <p>PILOTS</p>\n            {pilots.length ? (\n              pilots.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n          <div className=\"flex\">\n            <p>FILMS</p>\n            {films.map(el => (\n              <li key={el.title} onClick={() => changePage(el.url)}>\n                {el.title}\n              </li>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Starship\n","import React from 'react'\n\nimport Starship from './Starship/Starship'\n\nconst Starships = ({ curJson, changePage, value, inputSearch, pageNumber }) => {\n  return (\n    <div className=\"field-container\">\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Search...\"\n        onChange={inputSearch}\n      />\n      {curJson &&\n        curJson.count &&\n        curJson.results.map(el => (\n          <li\n            key={el.name}\n            onClick={() => {\n              changePage(el.url)\n            }}\n          >\n            {el.name}\n          </li>\n        ))}\n      {curJson && curJson.name && (\n        <Starship curJson={curJson} changePage={changePage} />\n      )}\n      {curJson && curJson.count && (\n        <div className=\"buttons\">\n          <button\n            onClick={() => {\n              curJson.previous && changePage(curJson.previous)\n            }}\n          >\n            <i className=\"fas fa-backward\" />\n          </button>\n          <span>{pageNumber}</span>\n\n          <button\n            onClick={() => {\n              curJson.next && changePage(curJson.next)\n            }}\n          >\n            <i className=\"fas fa-forward\" />\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Starships\n","import React, { Component } from 'react'\n\nclass Vehicle extends Component {\n  state = {\n    pilots: [],\n    films: [],\n  }\n  componentWillUnmount() {\n    this.setState({\n      pilots: [],\n      films: [],\n    })\n  }\n  componentWillMount() {\n    const { curJson } = this.props\n    curJson.pilots &&\n      curJson.pilots.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.pilots, res]\n            this.setState({\n              pilots: newChar,\n            })\n          })\n      )\n    curJson.films &&\n      curJson.films.map(el =>\n        fetch(el)\n          .then(res => res.json())\n          .then(res => {\n            const newChar = [...this.state.films, res]\n            this.setState({\n              films: newChar,\n            })\n          })\n      )\n  }\n  render() {\n    const { curJson, changePage } = this.props\n    const { pilots, films } = this.state\n    return (\n      <div className=\"field-element\">\n        <div className=\"about\">\n          <p>\n            Vehicle Name : <span>{curJson.name}</span>\n          </p>\n          <p>\n            Model : <span>{curJson.model}</span>\n          </p>\n          <p>\n            Passengers : <span>{curJson.passengers}</span>\n          </p>\n        </div>\n\n        <div className=\"flex-container\">\n          <div className=\"flex\">\n            <p>PILOTS</p>\n            {pilots.length ? (\n              pilots.map(el => (\n                <li key={el.name} onClick={() => changePage(el.url)}>\n                  {el.name}\n                </li>\n              ))\n            ) : (\n              <li>-</li>\n            )}\n          </div>\n          <div className=\"flex\">\n            <p>FILMS</p>\n            {films.map(el => (\n              <li key={el.title} onClick={() => changePage(el.url)}>\n                {el.title}\n              </li>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Vehicle\n","import React from 'react'\n\nimport Vehicle from './Vehicle/Vehicle'\n\nconst Vehicles = ({ curJson, changePage, value, inputSearch, pageNumber }) => {\n  return (\n    <div className=\"field-container\">\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Search...\"\n        onChange={inputSearch}\n      />\n      {curJson && curJson.count\n        ? curJson.results.map(el => (\n            <li\n              key={el.name}\n              onClick={() => {\n                changePage(el.url)\n              }}\n            >\n              {el.name}\n            </li>\n          ))\n        : ''}\n      {curJson && curJson.name ? (\n        <Vehicle curJson={curJson} changePage={changePage} />\n      ) : (\n        ''\n      )}\n      {curJson && curJson.count ? (\n        <div className=\"buttons\">\n          <button\n            onClick={() => {\n              curJson.previous && changePage(curJson.previous)\n            }}\n          >\n            <i className=\"fas fa-backward\" />\n          </button>\n          <span>{pageNumber}</span>\n\n          <button\n            onClick={() => {\n              curJson.next && changePage(curJson.next)\n            }}\n          >\n            <i className=\"fas fa-forward\" />\n          </button>\n        </div>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n\nexport default Vehicles\n","import React, { Component } from 'react'\nimport LinkList from '../LinkList/LinkList'\n\nimport Films from '../Fields/Films/Films'\nimport People from '../Fields/People/People'\nimport Planets from '../Fields/Planets/Planets'\nimport Species from '../Fields/Species/Species'\nimport Starships from '../Fields/Starships/Starships'\nimport Vehicles from '../Fields/Vehicles/Vehicles'\n\nclass Main extends Component {\n  state = {\n    currentField: '',\n    pageNumber: 1,\n  }\n  changeField = e => {\n    this.setState({\n      currentField: e.target.innerText.toLowerCase(),\n      curJson: undefined,\n      value: '',\n      pageNumber: 1,\n    })\n    fetch(`https://swapi.co/api/${e.target.innerText.toLowerCase()}`)\n      .then(res => res.json())\n      .then(res => this.setState({ curJson: res }))\n  }\n  inputSearch = e => {\n    const { currentField } = this.state\n    this.setState({\n      value: e.target.value,\n      currentField: `https://swapi.co/api/${currentField}/?search=${\n        e.target.value\n      }`,\n      pageNumber: 1,\n    })\n    this.changePage(\n      `https://swapi.co/api/${currentField}/?search=${e.target.value}`\n    )\n  }\n  changePage = url => {\n    this.setState({\n      currentPage: url,\n      currentField: url.split('/')[4],\n      pageNumber: url.indexOf('search') === -1 ? url.split('=')[1] : 1,\n    })\n    fetch(url)\n      .then(res => res.json())\n      .then(res => this.setState({ curJson: res }))\n  }\n  section = () => {\n    const { curJson, value, pageNumber } = this.state\n    switch (this.state.currentField) {\n      case 'films':\n        return (\n          <Films\n            pageNumber={pageNumber}\n            curJson={curJson}\n            changePage={this.changePage}\n            value={value}\n            inputSearch={this.inputSearch}\n          />\n        )\n      case 'people':\n        return (\n          <People\n            pageNumber={pageNumber}\n            curJson={curJson}\n            changePage={this.changePage}\n            value={value}\n            inputSearch={this.inputSearch}\n          />\n        )\n      case 'planets':\n        return (\n          <Planets\n            pageNumber={pageNumber}\n            curJson={curJson}\n            changePage={this.changePage}\n            value={value}\n            inputSearch={this.inputSearch}\n          />\n        )\n      case 'species':\n        return (\n          <Species\n            pageNumber={pageNumber}\n            curJson={curJson}\n            changePage={this.changePage}\n            value={value}\n            inputSearch={this.inputSearch}\n          />\n        )\n      case 'starships':\n        return (\n          <Starships\n            pageNumber={pageNumber}\n            curJson={curJson}\n            changePage={this.changePage}\n            value={value}\n            inputSearch={this.inputSearch}\n          />\n        )\n      case 'vehicles':\n        return (\n          <Vehicles\n            pageNumber={pageNumber}\n            curJson={curJson}\n            changePage={this.changePage}\n            value={value}\n            inputSearch={this.inputSearch}\n          />\n        )\n      default:\n        return ''\n    }\n  }\n  render() {\n    const { currentField } = this.state\n    return (\n      <div>\n        <LinkList currentField={currentField} changeField={this.changeField} />\n        {this.section()}\n      </div>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react'\nimport Header from '../components/Header/Header'\nimport Main from '../components/Main/Main'\n\nimport './MainComponent.scss'\n\nconst MainComponent = () => {\n  return (\n    <div>\n      <Header />\n      <Main />\n    </div>\n  )\n}\n\nexport default MainComponent\n","import React, { Component } from 'react'\nimport MainComponent from './containers/MainComponent'\n\nclass App extends Component {\n  render() {\n    return <MainComponent />\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}